@import "compass/css3";

// Background
@mixin baseBodyBackground()
{
  background-color: black;
}

@mixin focus()
{
  outline: 0;
  border: none;
  box-shadow: none;
}

@mixin clear-focus()
{
  border: none;
  box-shadow: none;
}

// Icons
@import "compass/utilities/sprites";
@import "icons/*.png";
@include all-icons-sprites;

@mixin render-sprite($sprite-name, $display: inline-block)
{
  @include icons-sprite($sprite-name);
  height: icons-sprite-height($sprite-name);
  width: icons-sprite-width($sprite-name);
  display: $display;
}

// .example-icon
// {
//   @include render-sprite(social-rounded-instagram) # Renders original image "src/sprites/icons/social-rounded-instagram.png"
// }

@mixin word-wrap() {
  word-break: break-word;
  hyphens: auto;
}

@mixin base-bottom-border()
{
  border-bottom-color: black;
  border-bottom-style: solid;
  border-bottom-width: 1px;
}

@mixin button($text, $background)
{
  background-color: $background;
  color: $text;
  padding: $grid-gutter-width/2 $grid-gutter-width;
  display: inline-block;
  text-align: center;

  @include font-sizes(16px, 16px);

  &:link,
  &:visited,
  &:active,
  &:hover
  {
    color: $text;
    text-decoration: none;
  }
}

@mixin button-primary
{
  @include button(white, $brand-secondary);
  border-radius: 5px;
}

@mixin button-secondary
{
  @include button(white, $brand-secondary);
}

@mixin button-tertiary
{
  @include button(black, $brand-tertiary);
}

@mixin hideBR
{
  br
  {
    content: ' ';

    &:after
    {
      content: ', ';
    }
  }
}

@mixin break($pseudo:'after')
{
  &:#{$pseudo}
  {
    content: "\000A";
    white-space: pre;
  }
}

@mixin break-after
{
  @include break();
}

@mixin break-before
{
  @include break('before');
}

@mixin fa-icon($placement, $icon, $font-size:inherit)
{
  &:#{$placement}
  {
    content: $icon;
    font-family: 'FontAwesome';
    font-size: $font-size;

    @content;
  }
}

@mixin fa-icon-before($icon, $font-size:inherit)
{
  @include fa-icon(before, $icon, $font-size) { @content; }
}

@mixin fa-icon-after($icon, $font-size:inherit)
{
  @include fa-icon(after, $icon, $font-size) { @content; }
}

@mixin link-states($selector:'&')
{
  #{$selector}, #{$selector}:hover, #{$selector}:visited, #{$selector}:active, #{$selector}:link
  {
    @content;
  }
}

@mixin link-secondary
{
  color: $link-color-secondary;

  &:link
  {
    color: $link-color-secondary;
  }

  &:visited
  {
    color: $link-color-secondary-visited;
  }

  &:hover
  {
    color: $link-color-secondary-hover;
  }

  &:active
  {
    color: $link-color-secondary-active;
  }
}

@mixin border-style
{
  border: 1px solid black;
}

@mixin font-sizes($font-size, $line-height, $font-size-xs: $font-size, $line-height-xs: $line-height)
{
  font-size: $font-size;
  line-height:$line-height;

  @media screen and (max-width:$screen-xs-max)
  {
    font-size: $font-size-xs;
    line-height:$line-height-xs;
  }
}

@mixin font-base
{
  @include font-sizes(13px, 17px);
  font-family: $font-family-main;
  font-weight: $font-weight-normal;
  color: $text-primary;
}

@mixin font-large
{
  @include font-sizes(16px, 20px);
}

@mixin font-h1
{
  @include font-sizes(38px, 47px, 20px, 25px);
  font-weight: $font-weight-bold;
}

@mixin font-h2
{
  @include font-sizes(20px, 25px);
  font-weight: $font-weight-bold;
}

@mixin font-h3
{
  @include font-sizes(16px, 20px);
  font-weight: $font-weight-bold;
}

@mixin font-h4
{
  @include font-sizes(20px, 25px);
  font-weight: $font-weight-normal;
}

@mixin vertical-center
{
  top: 50%;
  transform: translateY(-50%);
}

@mixin bp($min, $max) {

  $MediaQueriesEnabled: true !default;

  @if $MediaQueriesEnabled
  {
    $bps: xs, sm, md, lg;
    $valid-input: true;
    $mq: "";

    $maxes: (
      xs: "(max-width: #{$screen-xs-max})",
      sm: "(max-width: #{$screen-sm-max})",
      md: "(max-width: #{$screen-md-max})"
    );

    $mins: (
      sm: "(min-width: #{$screen-sm-min})",
      md: "(min-width: #{$screen-md-min})",
      lg: "(min-width: #{$screen-lg-min})"
    );

    @if($min != null and $max != null)
    {
      @if index($bps, $min) and index($bps, $max)
      {
        $mq: "#{map-get($mins, $min)} and #{map-get($maxes, $max)}"
      }
      @else
      {
        @warn "Breakpoint parameters must be either xs, sm, md, or lg.";
        $valid-input: false;
      }
    }

    @else if ($min != null and $max == null)
    {
      @if $min == xs
      {
        @warn "There is no min-width for Mobile Screens.";
        $valid-input: false;
      }
      @else
      {
        $mq: "#{map-get($mins, $min)}"
      }
    }

    @else if ($min == null and $max != null)
    {
      @if $max == lg
      {
        @warn "There is no Max Width for Large Screens.";
        $valid-input: false;
      }
      @else
      {
        $mq: "#{map-get($maxes, $max)}"
      }
    }
    @else
    {
      @warn "You must pass a parameter to the bp() mixin!";
      $valid-input: false;
    }
    @if $valid-input
    {
      @media #{$mq} { @content;}
    }
  }
}

@mixin bplte($max) {
  @include bp(null, $max) {
    @content;
  }
}

@mixin bpgte($min) {
  @include bp($min, null) {
    @content;
  }
}


@mixin if-js($selector: '&')
{
  @at-root
  {
    .js #{$selector}
    {
      @content;
    }
  }
}


@mixin clear-list-styling()
{
  list-style-type: none;
  padding-left: 0px;
  margin-bottom: 0px;
}


@mixin location-grid-item()
{
  &-title
  {
    @include font-large;
    text-transform: uppercase;
    font-weight: $font-weight-bold;
    margin-bottom: 5px;
    margin-top: 0px;
  }
  &-phone
  {
    font-weight: $font-weight-bold;
    margin-bottom: 6px;
  }
  &-hours-today
  {
    font-weight: $font-weight-bold;
    text-transform: uppercase;
  }

  &-link
  {
    text-transform: uppercase;
    font-weight: $font-weight-bold;
    width: 48%;
    height: 30px;

    position: relative;

    &:after
    {
      content: '';
    }

    &:first-child
    {
      @include button-tertiary;
      float: left;
      left: 52%;
      padding-left: 0px;
      padding-right: 0px;
      padding-top: 7px;
      padding-bottom: 7px;

      @include bplte(xs)
      {
        order: 99;
        margin-top: 10px;
      }
    }
    &:last-child
    {
      @include button-secondary;
      float: left;
      right: 48%;
      padding-left: 0px;
      padding-right: 0px;
      padding-top: 7px;
      padding-bottom: 7px;
    }

    @include bplte(xs)
    {
      position: static;
      left: inherit;
      right: inherit;

      &:first-child,
      &:last-child
      {
        float: none;
        display: block;
        width: 140px;
      }
    }

    &-wrapper
    {
      @include make-row;
      margin-left: 0px;
      margin-right: 0px;
      margin-top: 10px;
      margin-bottom: 10px;

      @include bplte(xs)
      {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
      }
    }
  }
}