{namespace components}

/*
{call components.address}
  {param includeCountry: /}
  {param stateAbbr: /}
  {param schemaOrg: /}
  {param itemRefId: /}
  {param linkToGetDirections: /}

  {param address1: /}
  {param address2: /}
  {param city: /}
  {param state: /}
  {param postalCode: /}
  {param country: /}
{/call}
*/

/**
 * Format a location address.
 * Generates a formatted address based on the options
 * specified as paramaters in the soy template call.
 *
 * Tag configuration:
 * @param includeCountry Include the country in the address? ('yes', 'no', or 'non-US')
 * @param stateAbbr Abbreviate the state (region)? (true, false)
 * @param schemaOrg Include schema.org tags? (true, false)
 * @param? itemRefId an ID to use when referencing an address from an itemref attribute
 * @param? linkToGetDirections
 * @param? provider
 *
 * Location fields:
 * @param address1 Contains the street address
 * @param address2 Contains the second line of the street address
 * @param city
 * @param state The abbreviated format of a state
 * @param postalCode
 * @param country Abbreviated format of a state
 * @param latitude
 * @param longitude
 */
{template .address}
  {if $schemaOrg}
    {call .geo_coordinates data="all" /} 
  {/if}

  {let $itemScope}
    {if $schemaOrg}
      {if strlen($itemRefId ?: '')>0}
        {sp}id="{$itemRefId}"
      {/if}
      {sp}itemscope itemtype="http://schema.org/PostalAddress" itemprop="address"
    {/if}
  {/let}
  <div class="c-address"{$itemScope |noAutoescape}>
    {if $linkToGetDirections}
      <a href="{call components.maps.get_directions_url data="all"/}"
         data-ga-category="Get Directions/Location Address"
         class="c-address-get-directions-link"
         target="_blank"
         rel="nofollow">
    {/if}
    {if $includeCountry != 'no'}
      {if $includeCountry == 'non-us'}
        {if $country != 'US'}
          <span class="c-address-country-name"{if $schemaOrg} itemprop="addressCountry"{/if}>{$country}</span>
        {/if}
      {else}
        <span class="c-address-country-name" {if $schemaOrg}itemprop="addressCountry"{/if}>{$country}</span>
      {/if}
    {/if}
    <span class="c-address-street c-address-street-1" {if $schemaOrg}itemprop="streetAddress"{/if}>{$address1}</span>
    {if $address2}
      <span class="c-address-street c-address-street-2" {if $schemaOrg}itemprop="streetAddress"{/if}>{$address2}</span>
    {/if}
    <span class="c-address-city"> 
      <span {if $schemaOrg}itemprop="addressLocality"{/if}>{$city}</span>,
    </span>{sp}
    <span class="c-address-state" {if $schemaOrg}itemprop="addressRegion"{/if}>
      {$state|stateAbbr:$stateAbbr}
    </span>
    <span class="c-address-postal-code" {if $schemaOrg}itemprop="postalCode"{/if}> {$postalCode}</span>
    {if $linkToGetDirections}
      </a>
    {/if}
  </div>
{/template}

/**
 * Pulls geo schema tag info
 *
 * @param latitude 
 * @param longitude 
 */
{template .geo_coordinates}
  <span class="coordinates" itemprop="geo" itemscope itemtype="http://schema.org/GeoCoordinates">
    <meta itemprop="latitude" content="{$latitude}">
    <meta itemprop="longitude" content="{$longitude}">
  </span>
{/template}
