{namespace desktop.directory}

/**
 * Template that displays all states in the directory in a list view with a map of the united states.
// * @param logo The business logo that is displayed in the header
 * @param base Object: {url (the base url of current directory page),
 *                      count (number of locations on the current directory page)}
 * @param keys List of Objects: {key (name of this next directory level),
 *                               loc (location information of a location in this directory),
 *                               url (url of this directory level),
 *                               count(number of locations in this directory level)}
 * @param crumbNames Sorted list of breadcrumb names
 * @param crumbUrls Sorted list of breadcrumb urls
 * @param? isStaging
 * @param businessId Passthrough
 * @param siteId Passthrough
 * @param directoryId Passthrough
 * @param siteDomain Passthrough
 * @param locale
 * @param directoryHierarchy
 * @param customByName
 */
{template .stateList}

  {let $exampleLocation: $keys[0].loc /}
  {let $title}
    {msg desc=""}
      Locations in
    {/msg}
    {sp}
    {if $exampleLocation.country == 'US'}{msg desc=""}The{/msg}{sp}{/if}
    {lcountryName($locale, $exampleLocation.country)}
  {/let}

  {call .layout data="all"}
    {param pageTitle}
      School of Rock {$title}
    {/param}
    {param metaDescription: $title /}  // TODO: These should be customized
    {param metaKeywords}
      {call common.helpers.keywords /}
    {/param}

    {param country: $exampleLocation.country /}
    {param pageContent}
      <div class="state-list-container">
        <h1>
          {$title |noAutoescape}
        </h1>

        <div class="row">
          <div class="col-md-5 col-sm-12">
            {call components.directory_list data="all" }
              {param keys: sortListByKeys($keys, ['loc.stateName']) /}
              {param showNumLocs: true /}
              {param baseUrl: $base.url /}
              {param pageLevel: 'State' /}
            {/call}
          </div>
          <div class="col-sm-7 hidden-sm hidden-xs">
            {if $exampleLocation.country =='US'}
              <div class="jvectormap" id="us-map"></div>
              <script type="text/javascript">
                window.Yext = (
                  function(Yext){lb}

                    Yext.BaseUrl = "{$base.url}";

                    Yext.StateList = (
                      function(StateList){lb}

                        StateList.keys = {$keys |json};
                        StateList.vals = {lb}
                          {foreach $key in $keys}
                            'US-{$key.key}': '1'{if not isLast($key)},{/if}
                          {/foreach}
                        {rb};

                        return StateList
                      {rb}
                    )(Yext.StateList || {lb}{rb});

                    return Yext;

                  {rb}
                )(window.Yext || {lb}{rb});
              </script>
            {else}
              {call components.maps.mapSetup data="all"}
                {param zoom: 9 /}
                {param disableMapControl: true /}
              {/call}
            {/if}
          </div>
        </div>
      </div>
    {/param}

    {param useminFooter}
      {call usemin.stateList_js data="all" /}
    {/param}
    {param pageLevel}
      {lcountryName($locale, $exampleLocation.country)}
    {/param}
  {/call}
{/template}
